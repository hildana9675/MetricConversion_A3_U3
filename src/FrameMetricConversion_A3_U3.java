/* Hildana. M
 * MetricConversion_A3_U3.hava
 * This program converts several measurments 
 * May/01/2018
 */

/**
 *
 * @author himel9675
 */
import java.text.DecimalFormat;
public class FrameMetricConversion_A3_U3 extends javax.swing.JFrame {
   
    /*
     * Converts inches to centimeters
     * @param inches is the value to convert from
     * return centimeter (the value after conversion)
     */
    public double inchesToCentimeters(double inches)
    {
      double centimeters;
      centimeters = inches * 2.54; //metric conversion (inches to centimeters)
      return centimeters; //return centimeter value  
   
    }
    
    /*
     * Converts feet to centimeters
     * @param feet is the value to convert from
     * return centimeter (the value after conversion)
     */
    public double feetToCentimeters(double feet)
    {
        double centimeters;
        centimeters = feet * 30.48; //metric converstion (feet to centimeters)
        return centimeters; //return centimeter value  
    }
    
    /*
     * Converts yards to meters
     * @param yards is the value to convert from
     * return meters (the value after conversion)
     */
     public double yardsToMeters(double yards)
     {
         double meters;
         meters = yards * 0.9144; //metric converstion (yards to meters)
         return meters; //return meter value  
     }
     
    /*
     * Converts miles to kilometers
     * @param miles is the value to convert from
     * return kilometer (the value after conversion)
     */
     public double milesToKilometers(double miles)
     {
         double kilometers;
         kilometers = miles * 1.6; //metric converstion (miles to kilometers)
         return kilometers; //return meter value  
     }
    
    
    public FrameMetricConversion_A3_U3() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        labelTitle = new javax.swing.JLabel();
        radioButtonIncToCen = new javax.swing.JRadioButton();
        radioButtonFeeToCen = new javax.swing.JRadioButton();
        radioButtonYarToMet = new javax.swing.JRadioButton();
        radioButtonMilToKil = new javax.swing.JRadioButton();
        buttonCalculate = new javax.swing.JButton();
        textInput = new javax.swing.JTextField();
        labelOutput = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        labelTitle.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        labelTitle.setText("Linear Conversion");

        buttonGroup1.add(radioButtonIncToCen);
        radioButtonIncToCen.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioButtonIncToCen.setText("Inches to Centimeters");
        radioButtonIncToCen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonIncToCenActionPerformed(evt);
            }
        });

        buttonGroup1.add(radioButtonFeeToCen);
        radioButtonFeeToCen.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioButtonFeeToCen.setText("Feet to Centimeters");

        buttonGroup1.add(radioButtonYarToMet);
        radioButtonYarToMet.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioButtonYarToMet.setText("Yards to Meters");

        buttonGroup1.add(radioButtonMilToKil);
        radioButtonMilToKil.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioButtonMilToKil.setText("Miles To Kilometers");

        buttonCalculate.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        buttonCalculate.setText("Calculate");
        buttonCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCalculateActionPerformed(evt);
            }
        });

        textInput.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        labelOutput.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        labelOutput.setForeground(new java.awt.Color(204, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelTitle)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioButtonFeeToCen)
                            .addComponent(radioButtonIncToCen))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioButtonYarToMet)
                            .addComponent(radioButtonMilToKil)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(textInput, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonCalculate)
                        .addGap(41, 41, 41))
                    .addComponent(labelOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTitle)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioButtonIncToCen)
                    .addComponent(radioButtonYarToMet))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioButtonFeeToCen)
                    .addComponent(radioButtonMilToKil))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCalculate)
                    .addComponent(textInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(labelOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void radioButtonIncToCenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButtonIncToCenActionPerformed

    }//GEN-LAST:event_radioButtonIncToCenActionPerformed

    private void buttonCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCalculateActionPerformed
        double conversion, value;
        
        //retrieve the value inputed by the user
        value = Double.parseDouble(textInput.getText()); 
        
        //round the output to two decimal places
        DecimalFormat round = new DecimalFormat ("###.##");
        
        //if this button is selected, convert inches to centimeter
        if (radioButtonIncToCen.isSelected())
        {
          conversion = inchesToCentimeters(value); //assigns value to inches
          
          //displays the conversion 
          labelOutput.setText(value + " inches = " + round.format(conversion) +
                  " centimeters" );
        }
        
        //if this button is selected, convert feetss to centimeter
        if (radioButtonFeeToCen.isSelected())
        {
            conversion = feetToCentimeters(value); //assigns value to feet
            
             //displays the conversion 
            labelOutput.setText (value + " feets = " + round.format(conversion) +
                    " centimeters");
        }
        
        //if this button is selected, convert yards to meters
        if (radioButtonYarToMet.isSelected())
        {
           conversion = yardsToMeters(value); //assigns value to yards
           
            //displays the conversion 
            labelOutput.setText (value + " yards = " + round.format(conversion) +
                    " meters");
        }
        
        //if this button is selected, convert miless to kilometers
        if (radioButtonMilToKil.isSelected())
        {
          conversion = milesToKilometers(value); //assigns value to miles
          
          //displays the conversion 
          labelOutput.setText (value + " miles = " + round.format(conversion) +
                    " kilometers");
        }
        
    }//GEN-LAST:event_buttonCalculateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameMetricConversion_A3_U3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameMetricConversion_A3_U3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameMetricConversion_A3_U3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameMetricConversion_A3_U3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameMetricConversion_A3_U3().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCalculate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelOutput;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JRadioButton radioButtonFeeToCen;
    private javax.swing.JRadioButton radioButtonIncToCen;
    private javax.swing.JRadioButton radioButtonMilToKil;
    private javax.swing.JRadioButton radioButtonYarToMet;
    private javax.swing.JTextField textInput;
    // End of variables declaration//GEN-END:variables
}
